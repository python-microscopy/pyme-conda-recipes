# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

#just build a single, lightweight, dependency to troubleshoot

name: Build PYME packages

on:
  workflow_dispatch:

jobs:

  nix:
    strategy:
      matrix:
        os: [ubuntu-latest] #windows-latest, macos-latest]
        python: ['3.8'] #,2.7] - # 2.7 disabled for now due to missing VC9

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        conda install conda-build anaconda-client pillow
        #sconda config --add channels david_baddeley
        #conda install -c conda-forge boa
        mkdir ~/pkg_build
    - name: Conda info
      run: |
        conda info
        conda list
    - name: Build and publish
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        #conda build --output-folder ~/pkg_build --skip-existing -c david_baddeley -c conda-forge pyme-depends
        conda build --output-folder ~/pkg_build --skip-existing -c david_baddeley -c conda-forge python-microscopy
        #ls -al ~/pkg_build/linux-64
        /usr/share/miniconda/bin/anaconda -v --show-traceback upload -u david_baddeley --force ~/pkg_build/linux-64/*.conda


  osx:
    strategy:
      matrix:
        os: [macos-latest] #windows-latest, macos-latest]
        python: ['3.8'] #,2.7] - # 2.7 disabled for now due to missing VC9
        architecture: ['x86_64'] #, 'arm64']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.architecture }}
        miniforge-version: "latest"

    - name: Install dependencies
      run: |
        conda install conda-build anaconda-client pillow
        #conda install -c conda-forge boa
        #sconda config --add channels david_baddeley
        mkdir ~/pkg_build
    - name: Conda info
      run: |
        conda info
        conda list
    - name: Build
      run: |
        #conda build --output-folder ~/pkg_build --skip-existing -c david_baddeley -c conda-forge pyme-depends
        conda build --output-folder ~/pkg_build --skip-existing -c david_baddeley python-microscopy
    - name: Publish
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        #ls -al ~/pkg_build/linux-64
        # packages will go to different directories depending on the architecture
        if ${{matrix.architecture}} == 'x86_64'; then
          /Users/runner/miniconda3/bin/anaconda -v --show-traceback upload -u david_baddeley --force ~/pkg_build/osx-64/*.conda
        else
          /Users/runner/miniconda3/bin/anaconda -v --show-traceback upload -u david_baddeley --force ~/pkg_build/osx-arm64/*.conda
        fi
        #/usr/local/miniconda/bin/anaconda -v --show-traceback upload -u david_baddeley --force ~/pkg_build/osx-64/*.conda


  win:
    strategy:
      matrix:
        os: [windows-latest] #windows-latest, macos-latest]
        python: ['3.8'] #,2.7] - # 2.7 disabled for now due to missing VC9

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python }}
        miniforge-version: "latest"

    - name: Install dependencies
      shell: pwsh
      run: |
        conda install conda-build anaconda-client
        #conda install -c conda-forge boa
        #conda config --add channels david_baddeley
    - name: Conda info
      run: |
        conda info
        conda list
        echo $MSVC_PATH
    - name: Build
      shell: pwsh
      env:
        MSVC_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools"
      run: |
        echo $MSVC_PATH
        echo $PATH
        call %MSVC_PATH%\vcvarsall.bat x64
        echo $PATH
        where cl.exe
    - name: Buildss
      shell: pwsh
      env:
        MSVC_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools"
      run: |
        #"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\vcvarsall.bat"
        #conda mambabuild --skip-existing -c david_baddeley -c conda-forge pyme-depends python-microscopy
        #conda build --output-folder ~/pkg_build --skip-existing -c david_baddeley -c conda-forge pyme-depends
        #mkdir ~/pkg_build
        conda build --skip-existing -c david_baddeley -c conda-forge python-microscopy
    - name: Publish
      shell: pwsh
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        #ls -al ~/pkg_build/
        #ls C:\Miniconda\Scripts\
        #ls C:\Miniconda\bin\
        #ls C:\Miniconda\envs\test\Scripts
        C:\Miniconda\envs\test\Scripts\anaconda.exe -v --show-traceback upload -u david_baddeley --force C:\Miniconda\envs\test\conda-bld\win-64\*.condas
